{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Luna\\\\Documents\\\\WebApp\\\\CountryDashboard\\\\ClientApp\\\\src\\\\components\\\\Home.js\";\nimport React, { Component } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport ListGroup from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      countries: [],\n      loading: true\n    };\n  }\n\n  async componentDidMount() {\n    await this.getCountries();\n  }\n\n  static renderCountriesList(countries) {// return (\n    //     <ListGroup>\n    //         {countries.map(country =>\n    //             <ListGroup.Item key={country.id}>\n    //                 <Card style={{width: '18rem'}}>\n    //                     <Card.Body>\n    //                         <Card.Title>{country.name}</Card.Title>\n    //                         <Card.Text>\n    //                             Some quick example text to build on the card title and make up the\n    //                             bulk of the card's content.\n    //                         </Card.Text>\n    //                     </Card.Body>\n    //                     <ListGroup className=\"list-group-flush\">\n    //                         <ListGroup.Item>Cras justo odio</ListGroup.Item>\n    //                         <ListGroup.Item>Dapibus ac facilisis in</ListGroup.Item>\n    //                         <ListGroup.Item>Vestibulum at eros</ListGroup.Item>\n    //                     </ListGroup>\n    //                     <Card.Body>\n    //                         <Card.Link href=\"#\">Card Link</Card.Link>\n    //                         <Card.Link href=\"#\">Another Link</Card.Link>\n    //                     </Card.Body>\n    //                 </Card>\n    //             </ListGroup.Item>\n    //         )}\n    //     </ListGroup>\n    // )\n  }\n\n  render() {\n    let contents = this.state.loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"em\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }, this) : FetchData.renderCountriesList(this.state.countries);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hello, world!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Welcome to your new single-page application, built with:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          width: '18rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: \"Card Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: \"Some quick example text to build on the card title and make up the bulk of the card's content.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n          className: \"list-group-flush\",\n          children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: \"Cras justo odio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: \"Dapibus ac facilisis in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: \"Vestibulum at eros\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Link, {\n            href: \"#\",\n            children: \"Card Link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card.Link, {\n            href: \"#\",\n            children: \"Another Link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n\n  async getCountries() {\n    const response = await fetch('/api/countries/getCountries');\n    const data = await response.json();\n    console.log(data);\n    this.setState({\n      countries: data,\n      loading: false\n    });\n  }\n\n}\nHome.displayName = Home.name;","map":{"version":3,"names":["React","Component","Card","ListGroup","Home","constructor","props","state","countries","loading","componentDidMount","getCountries","renderCountriesList","render","contents","FetchData","width","response","fetch","data","json","console","log","setState","displayName","name"],"sources":["C:/Users/Luna/Documents/WebApp/CountryDashboard/ClientApp/src/components/Home.js"],"sourcesContent":["import React, {Component} from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport ListGroup from \"react-bootstrap\";\r\n\r\nexport class Home extends Component {\r\n    static displayName = Home.name;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {countries: [], loading: true};\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.getCountries();\r\n    }\r\n\r\n    static renderCountriesList(countries) {\r\n        // return (\r\n        //     <ListGroup>\r\n        //         {countries.map(country =>\r\n        //             <ListGroup.Item key={country.id}>\r\n        //                 <Card style={{width: '18rem'}}>\r\n        //                     <Card.Body>\r\n        //                         <Card.Title>{country.name}</Card.Title>\r\n        //                         <Card.Text>\r\n        //                             Some quick example text to build on the card title and make up the\r\n        //                             bulk of the card's content.\r\n        //                         </Card.Text>\r\n        //                     </Card.Body>\r\n        //                     <ListGroup className=\"list-group-flush\">\r\n        //                         <ListGroup.Item>Cras justo odio</ListGroup.Item>\r\n        //                         <ListGroup.Item>Dapibus ac facilisis in</ListGroup.Item>\r\n        //                         <ListGroup.Item>Vestibulum at eros</ListGroup.Item>\r\n        //                     </ListGroup>\r\n        //                     <Card.Body>\r\n        //                         <Card.Link href=\"#\">Card Link</Card.Link>\r\n        //                         <Card.Link href=\"#\">Another Link</Card.Link>\r\n        //                     </Card.Body>\r\n        //                 </Card>\r\n        //             </ListGroup.Item>\r\n        //         )}\r\n        //     </ListGroup>\r\n        // )\r\n    }\r\n    \r\n    render() {\r\n        let contents = this.state.loading\r\n            ? <p><em>Loading...</em></p>\r\n            : FetchData.renderCountriesList(this.state.countries);\r\n        \r\n        return (\r\n            <div>\r\n                <h1>Hello, world!</h1>\r\n                <p>Welcome to your new single-page application, built with:</p>\r\n                <Card style={{width: '18rem'}}>\r\n                    <Card.Body>\r\n                        <Card.Title>Card Title</Card.Title>\r\n                        <Card.Text>\r\n                            Some quick example text to build on the card title and make up the\r\n                            bulk of the card's content.\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                    <ListGroup className=\"list-group-flush\">\r\n                        <ListGroup.Item>Cras justo odio</ListGroup.Item>\r\n                        <ListGroup.Item>Dapibus ac facilisis in</ListGroup.Item>\r\n                        <ListGroup.Item>Vestibulum at eros</ListGroup.Item>\r\n                    </ListGroup>\r\n                    <Card.Body>\r\n                        <Card.Link href=\"#\">Card Link</Card.Link>\r\n                        <Card.Link href=\"#\">Another Link</Card.Link>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    async getCountries() {\r\n        const response = await fetch('/api/countries/getCountries');\r\n        const data = await response.json();\r\n        console.log(data)\r\n        this.setState({countries: data, loading: false});\r\n    }\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;;AAEA,OAAO,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;EAGhCI,WAAW,CAACC,KAAD,EAAQ;IACf,MAAMA,KAAN;IACA,KAAKC,KAAL,GAAa;MAACC,SAAS,EAAE,EAAZ;MAAgBC,OAAO,EAAE;IAAzB,CAAb;EACH;;EAEsB,MAAjBC,iBAAiB,GAAG;IACtB,MAAM,KAAKC,YAAL,EAAN;EACH;;EAEyB,OAAnBC,mBAAmB,CAACJ,SAAD,EAAY,CAClC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACH;;EAEDK,MAAM,GAAG;IACL,IAAIC,QAAQ,GAAG,KAAKP,KAAL,CAAWE,OAAX,gBACT;MAAA,uBAAG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAH;MAAA;MAAA;MAAA;IAAA,QADS,GAETM,SAAS,CAACH,mBAAV,CAA8B,KAAKL,KAAL,CAAWC,SAAzC,CAFN;IAIA,oBACI;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI,QAAC,IAAD;QAAM,KAAK,EAAE;UAACQ,KAAK,EAAE;QAAR,CAAb;QAAA,wBACI,QAAC,IAAD,CAAM,IAAN;UAAA,wBACI,QAAC,IAAD,CAAM,KAAN;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI,QAAC,IAAD,CAAM,IAAN;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAFJ;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAQI,QAAC,SAAD;UAAW,SAAS,EAAC,kBAArB;UAAA,wBACI,QAAC,SAAD,CAAW,IAAX;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI,QAAC,SAAD,CAAW,IAAX;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAFJ,eAGI,QAAC,SAAD,CAAW,IAAX;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAHJ;QAAA;UAAA;UAAA;UAAA;QAAA,QARJ,eAaI,QAAC,IAAD,CAAM,IAAN;UAAA,wBACI,QAAC,IAAD,CAAM,IAAN;YAAW,IAAI,EAAC,GAAhB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI,QAAC,IAAD,CAAM,IAAN;YAAW,IAAI,EAAC,GAAhB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAFJ;QAAA;UAAA;UAAA;UAAA;QAAA,QAbJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAHJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAwBH;;EAEiB,MAAZL,YAAY,GAAG;IACjB,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAA5B;IACA,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;IACAC,OAAO,CAACC,GAAR,CAAYH,IAAZ;IACA,KAAKI,QAAL,CAAc;MAACf,SAAS,EAAEW,IAAZ;MAAkBV,OAAO,EAAE;IAA3B,CAAd;EACH;;AA7E+B;AAAvBL,I,CACFoB,W,GAAcpB,IAAI,CAACqB,I"},"metadata":{},"sourceType":"module"}