{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Luna\\\\Documents\\\\WebApp\\\\CountryDashboard\\\\ClientApp\\\\src\\\\components\\\\Home.js\";\nimport React, { Component } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      countries: [],\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    this.getCountries();\n  }\n\n  static renderCountriesList(countries) {\n    return /*#__PURE__*/_jsxDEV(ListGroup, {\n      children: countries.map(country => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: '18rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: country.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: \"Some quick example text to build on the card title and make up the bulk of the card's content.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n            className: \"list-group-flush\",\n            children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: \"Cras justo odio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: \"Dapibus ac facilisis in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: \"Vestibulum at eros\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Link, {\n              href: \"#\",\n              children: \"Card Link\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Link, {\n              href: \"#\",\n              children: \"Another Link\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }, this)\n      }, country.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    let contents = this.state.loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"em\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }, this) : Home.renderCountriesList(this.state.countries);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"tabelLabel\",\n        children: \"Weather forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This component demonstrates fetching data from the server.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), contents]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n\n  async getCountries() {\n    const response = await fetch('/api/countries/getCountries');\n    const data = await response.json();\n    console.log(data);\n    this.setState({\n      countries: data,\n      loading: false\n    });\n  }\n\n}\nHome.displayName = Home.name;","map":{"version":3,"names":["React","Component","Card","ListGroup","Home","constructor","props","state","countries","loading","componentDidMount","getCountries","renderCountriesList","map","country","width","name","id","render","contents","response","fetch","data","json","console","log","setState","displayName"],"sources":["C:/Users/Luna/Documents/WebApp/CountryDashboard/ClientApp/src/components/Home.js"],"sourcesContent":["import React, {Component} from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\n\r\nexport class Home extends Component {\r\n    static displayName = Home.name;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {countries: [], loading: true};\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getCountries();\r\n    }\r\n\r\n    static renderCountriesList(countries) {\r\n        return (\r\n            <ListGroup>\r\n                {countries.map(country =>\r\n                    <ListGroup.Item key={country.id}>\r\n                        <Card style={{width: '18rem'}}>\r\n                            <Card.Body>\r\n                                <Card.Title>{country.name}</Card.Title>\r\n                                <Card.Text>\r\n                                    Some quick example text to build on the card title and make up the\r\n                                    bulk of the card's content.\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                            <ListGroup className=\"list-group-flush\">\r\n                                <ListGroup.Item>Cras justo odio</ListGroup.Item>\r\n                                <ListGroup.Item>Dapibus ac facilisis in</ListGroup.Item>\r\n                                <ListGroup.Item>Vestibulum at eros</ListGroup.Item>\r\n                            </ListGroup>\r\n                            <Card.Body>\r\n                                <Card.Link href=\"#\">Card Link</Card.Link>\r\n                                <Card.Link href=\"#\">Another Link</Card.Link>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </ListGroup.Item>\r\n                )}\r\n            </ListGroup>\r\n        )\r\n    }\r\n    \r\n    render() {\r\n        let contents = this.state.loading\r\n            ? <p><em>Loading...</em></p>\r\n            : Home.renderCountriesList(this.state.countries);\r\n        \r\n        return (\r\n            <div>\r\n                <h1 id=\"tabelLabel\" >Weather forecast</h1>\r\n                <p>This component demonstrates fetching data from the server.</p>\r\n                {contents}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    async getCountries() {\r\n        const response = await fetch('/api/countries/getCountries');\r\n        const data = await response.json();\r\n        console.log(data)\r\n        this.setState({countries: data, loading: false});\r\n    }\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;;AAEA,OAAO,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;EAGhCI,WAAW,CAACC,KAAD,EAAQ;IACf,MAAMA,KAAN;IACA,KAAKC,KAAL,GAAa;MAACC,SAAS,EAAE,EAAZ;MAAgBC,OAAO,EAAE;IAAzB,CAAb;EACH;;EAEDC,iBAAiB,GAAG;IAChB,KAAKC,YAAL;EACH;;EAEyB,OAAnBC,mBAAmB,CAACJ,SAAD,EAAY;IAClC,oBACI,QAAC,SAAD;MAAA,UACKA,SAAS,CAACK,GAAV,CAAcC,OAAO,iBAClB,QAAC,SAAD,CAAW,IAAX;QAAA,uBACI,QAAC,IAAD;UAAM,KAAK,EAAE;YAACC,KAAK,EAAE;UAAR,CAAb;UAAA,wBACI,QAAC,IAAD,CAAM,IAAN;YAAA,wBACI,QAAC,IAAD,CAAM,KAAN;cAAA,UAAaD,OAAO,CAACE;YAArB;cAAA;cAAA;cAAA;YAAA,QADJ,eAEI,QAAC,IAAD,CAAM,IAAN;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAFJ;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,eAQI,QAAC,SAAD;YAAW,SAAS,EAAC,kBAArB;YAAA,wBACI,QAAC,SAAD,CAAW,IAAX;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QADJ,eAEI,QAAC,SAAD,CAAW,IAAX;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAFJ,eAGI,QAAC,SAAD,CAAW,IAAX;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAHJ;UAAA;YAAA;YAAA;YAAA;UAAA,QARJ,eAaI,QAAC,IAAD,CAAM,IAAN;YAAA,wBACI,QAAC,IAAD,CAAM,IAAN;cAAW,IAAI,EAAC,GAAhB;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QADJ,eAEI,QAAC,IAAD,CAAM,IAAN;cAAW,IAAI,EAAC,GAAhB;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAFJ;UAAA;YAAA;YAAA;YAAA;UAAA,QAbJ;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ,GAAqBF,OAAO,CAACG,EAA7B;QAAA;QAAA;QAAA;MAAA,QADH;IADL;MAAA;MAAA;MAAA;IAAA,QADJ;EA0BH;;EAEDC,MAAM,GAAG;IACL,IAAIC,QAAQ,GAAG,KAAKZ,KAAL,CAAWE,OAAX,gBACT;MAAA,uBAAG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAH;MAAA;MAAA;MAAA;IAAA,QADS,GAETL,IAAI,CAACQ,mBAAL,CAAyB,KAAKL,KAAL,CAAWC,SAApC,CAFN;IAIA,oBACI;MAAA,wBACI;QAAI,EAAE,EAAC,YAAP;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ,EAGKW,QAHL;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAOH;;EAEiB,MAAZR,YAAY,GAAG;IACjB,MAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAA5B;IACA,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;IACAC,OAAO,CAACC,GAAR,CAAYH,IAAZ;IACA,KAAKI,QAAL,CAAc;MAAClB,SAAS,EAAEc,IAAZ;MAAkBb,OAAO,EAAE;IAA3B,CAAd;EACH;;AA5D+B;AAAvBL,I,CACFuB,W,GAAcvB,IAAI,CAACY,I"},"metadata":{},"sourceType":"module"}